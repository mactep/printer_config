[safe_z_home]
home_xy_position: 157, 216
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 120.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 16
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
#z_hop_speed: 15.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
# move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.

[force_move]
enable_force_move: True

[gcode_macro PARK_SAFE_Z_HOME]
# Add a configuration variable to control debug logging
variable_debug_park_safe: True 
gcode:
    ; --- Debug Flag Check ---
    {% set DEBUG = (debug_park_safe|lower == 'true') %}

    ; Define local variables using the correct config access
    {% set safe_z_config = printer.configfile.settings.safe_z_home %}
    {% set safe_x = safe_z_config.home_xy_position[0] %}
    {% set safe_y = safe_z_config.home_xy_position[1] %}
    {% set z_lift_height = safe_z_config.z_hop %}
    {% set speed_mm_min = safe_z_config.speed * 60 %}

    {% if DEBUG %}
        RESPOND TYPE=echo MSG="DEBUG: PARK_SAFE_Z_HOME started."
        RESPOND TYPE=echo MSG="DEBUG: HODMED AXES: {printer.toolhead.homed_axes|join(', ')}"
        RESPOND TYPE=echo MSG="DEBUG: Safe X:{'%.2f' % safe_x}, Safe Y:{'%.2f' % safe_y}"
        RESPOND TYPE=echo MSG="DEBUG: Z-Lift Height:{'%.2f' % z_lift_height} mm"
        RESPOND TYPE=echo MSG="DEBUG: Speed:{'%.0f' % speed_mm_min} mm/min"
        RESPOND TYPE=echo MSG="DEBUG: Current Z:{'%.2f' % printer.toolhead.position.z}"
    {% endif %}

    ; ------------------------------------------------------------------
    ; Check if Z is NOT homed and set its current position to 0.
    ; ------------------------------------------------------------------
    {% if "z" not in printer.toolhead.homed_axes and printer.toolhead.position.z != z_lift_height %}
        RESPOND TYPE=command MSG="Z not homed. Setting Z position to 0."
        SET_KINEMATIC_POSITION Z=0
        {% if DEBUG %}
            RESPOND TYPE=echo MSG="DEBUG: Z not homed. Kinematic position set to Z=0."
            RESPOND TYPE=echo MSG="DEBUG: HODMED AXES: {printer.toolhead.homed_axes|join(', ')}"
        {% endif %}
    {% endif %}

    ; ------------------------------------------------------------------
    ; Lift Z if current position is below the safe height.
    ; ------------------------------------------------------------------
    {% if printer.toolhead.position.z < z_lift_height %}
        {% if DEBUG %}
            RESPOND TYPE=echo MSG="DEBUG: Z is below lift height. Lifting Z to {'%.2f' % z_lift_height}."
        {% endif %}
        G90             ; Absolute positioning
        G0 Z{z_lift_height} F{speed_mm_min}
    {% endif %}
    
    ; ------------------------------------------------------------------
    ; Home X and Y if not already homed.
    ; ------------------------------------------------------------------
    {% if "xy" not in printer.toolhead.homed_axes %}
        {% if DEBUG %}
            RESPOND TYPE=echo MSG="DEBUG: X or Y not homed. Homing X and Y."
            RESPOND TYPE=echo MSG="DEBUG: HODMED AXES BEFORE G28: {printer.toolhead.homed_axes|join(', ')}"
        {% endif %}
        G28 X Y
        {% if DEBUG %}
            RESPOND TYPE=echo MSG="DEBUG: HODMED AXES AFTER G28: {printer.toolhead.homed_axes|join(', ')}"
        {% endif %}
    {% endif %}

    ; ------------------------------------------------------------------
    ; Move to the safe parking position.
    ; ------------------------------------------------------------------
    {% if DEBUG %}
        RESPOND TYPE=echo MSG="DEBUG: Moving to safe park position X{'%.2f' % safe_x} Y{'%.2f' % safe_y}."
    {% endif %}
    G90             ; Absolute positioning (ensure absolute mode is set)
    G0 X{safe_x} Y{safe_y} F{speed_mm_min}
    
    {% if DEBUG %}
        RESPOND TYPE=echo MSG="DEBUG: PARK_SAFE_Z_HOME finished."
    {% endif %}