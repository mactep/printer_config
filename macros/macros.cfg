[include ./macros/centering.cfg]
[include ./macros/spoolman.cfg]
[include ./macros/line_purge.cfg]
[include ./macros/start_end.cfg]

# --------------------------------------------------------------------

# ------------------------- Filament Change --------------------------
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

# -----------------------------------------------------------------------

# --------------------------- Cancel object -----------------------------
[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

# --------------------------------------------------------------------------

# --------------------------- Power off printer ----------------------------
# Powers the print of if it is idle for 5 minutes, if it is heating of
# doing anything considered "printing", it keeps on
[gcode_macro POWER_ON_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="on")}

[gcode_macro M80]
gcode:
  POWER_ON_PRINTER

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro M81]
gcode:
  POWER_OFF_PRINTER

# [delayed_gcode delayed_printer_off]
# initial_duration: 60
# gcode:
#   {% if printer.extruder.target >= 50 or printer.extruder.temperature >= 50  or printer.idle_timeout.state == "Printing" %} # or printer.heater_bed.temperature >= 50 %}
#     UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60    
#   {% else %}
#     POWER_OFF_PRINTER
#   {% endif %}
# 
# # Override SDCARD_PRINT_FILE
# [gcode_macro SDCARD_PRINT_FILE]
# rename_existing: SDCPF
# gcode:
#    # Step 1: Call the remote method to turn on the power device
#    POWER_ON_PRINTER
#    # Step 2: Pause while the device powers up.  The following example
#    # pauses for 4 seconds.  It may be necessary to tweak this value.
#    G4 P4000
#    # Step 3: Call the renamed command to start the print
#    SDCPF {rawparams}
